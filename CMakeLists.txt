project(e-scatter)
cmake_minimum_required(VERSION 2.8)
set(EXECUTABLE_OUTPUT_PATH ${PROJECT_BINARY_DIR}/bin)
set(LIBRARY_OUTPUT_PATH ${PROJECT_BINARY_DIR}/lib)
set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=c++11 -O3 -Wall -ggdb")
include_directories(3rdparty/cub)
find_package(CUDA REQUIRED)
list(APPEND CUDA_NVCC_FLAGS "-std=c++11 -O3 -prec-sqrt=false -Xptxas=-v --compiler-options -Wall")
list(APPEND CUDA_NVCC_FLAGS "-gencode arch=compute_20,code=sm_20")
list(APPEND CUDA_NVCC_FLAGS "-gencode arch=compute_52,code=sm_52")
set(CUDA_PROPAGATE_HOST_FLAGS off)
# find_package(Doxygen)
# if(DOXYGEN_FOUND)
# 	add_custom_target(doc ALL ${DOXYGEN_EXECUTABLE} Doxyfile COMMENT "Generating documentation" VERBATIM)
# endif(DOXYGEN_FOUND)
find_package(OpenMP REQUIRED)
set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} ${OpenMP_CXX_FLAGS}")
set(CUDA_NVCC_FLAGS "${CUDA_NVCC_FLAGS} --compiler-options ${OpenMP_CXX_FLAGS}")
include_directories(src)
add_subdirectory(src)